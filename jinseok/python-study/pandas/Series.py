# %%
'''
Series : 1차원 데이터
- 각 도시들의 인구수를 Series로 만들어보자
'''

# %%
import pandas as pd

# Series 만들기
# 방법 1: 리스트로 데이터 전달
pop = pd.Series([9901232, 34441423, 2891323, 2462123])
print(pop)

# 방법 2: 인덱스와 함께 사용
pop2 = pd.Series([9901232, 34441423, 2891323, 2462123],
                 index=['서울', '경기도', '부산', '인천'])
print(pop2)

# 방법 3: 딕셔너리로 만들기
pop_dict = {'서울': 9901232, '경기도': 34441423, '부산': 2891323, '인천': 2462123}
pop3 = pd.Series(pop_dict)
print(pop3)

# %%
pop.values

# %%
type(pop.values)

# %%
pop2.index

# %%
# Series의 데이터 타입 확인하기 : dtype
pop2.dtype

# %%
pop2

# %%
# 인덱스의 이름으로 인덱싱을
pop2['부산']

# %%
# 인덱싱 번호로 인덱싱
pop2[1]

# %%
# 여러 도시를 인덱싱
# 인덱스를 '리스트'의 형태로 입력
# 인덱싱은 '하나 씩' 슬라이싱은 '구간'
pop2['부산','인천']
# %%
# 단일 대괄호 안에 리스트로 여러 값을 전달
pop2[['부산', '인천']]

# %%
# 인덱스 번호로 라이싱
# 부산 ~ 인천 슬라이싱 ( 1 ~ 2번 인덱스 )
pop2[1:3]

# %%
pop2.name = '인구'

# %%
# 인덱스 이름으로 슬라이싱
pop2['서울':'인천']
# 끝값이 포함된다

# %%
## 불리언 인덱싱
### - 특정 조건에 맞는 데이터를 가져올 때 사용
### - 인덱스 번호 대신, 조건식을 입력

# 인구가 300만 이하인가?

pop2<3000000
# %%
## 원하는건 조건에 맞는 실제 값
pop2[pop2<3000000]

# %%
pop2[(pop2 > 250000) & (pop2 < 5000000)]

# %%
pop2[pop2.between(250000, 5000000)]

# %%
### Series 데이터 변경, 추가, 삭제
pop2

# %%
# 데이터 변경
# 인덱싱으로 값을 불러와서, 새로운 값을 넣어줌.
pop2['서울'] = 4000000

# %%
pop2

# %%
# 데이터 추가
# 기존에 입력한 적 없는 인덱스에 데이터 삽입
pop2['대전'] = 240000

# %%
# 데이터 삭제
del pop2['대전']

# %%
pop2

